<?xml version="1.0"?>
<launch>
  <!-- Gazebo world to load -->
  <arg name="world" default="$(find vrx_gazebo)/worlds/sydneyregatta.world" />
  <!-- If true, run gazebo GUI -->
  <arg name="gui" default="true" />
  <!-- If true, run gazebo in verbose mode -->
  <arg name="verbose" default="false"/>
  <!-- If true, start in paused state -->
  <arg name="paused"  default="false"/>
  <!-- Start in a default namespace -->
  <arg name="namespace" default="sandwich_0"/>
  <!-- Set robot name for group model -->
  <arg name="robot_name" default="sandwich_0"/>
  <!-- Lock robot in place on start -->
  <arg name="robot_locked" default="false" />
  <!-- Control robot with joystick -->
  <arg name="joy" default="true"/>
  

  <!-- Start Gazebo with the world file -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name"   value="$(arg world)"/>
    <arg name="verbose"      value="$(arg verbose)"/>
    <arg name="paused"       value="$(arg paused)"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui"          value="$(arg gui)" />
  </include>

 <group ns="robot0">
    <include file="$(find sandwich_gazebo)/launch/sandwich_multi.launch">
      <arg name="x" value="-532"/>
      <arg name="y" value="162"/>
      <arg name="z" value="0"/>
      <arg name="P" value="0"/>
      <arg name="R" value="0"/>
      <arg name="Y" value="1"/>
      <arg name="robot_locked" value="false"/>
      <arg name="namespace" value="sandwich_0"/>
      <arg name="robot_name" value="sandwich_0"/>
     </include>
     <node pkg="robot_state_publisher" type="robot_state_publisher"
	  name="robot_state_publisher" > 
	  <remap from="robot_description" to="/robot0/sandwich_0/robot_description" />     
     </node>
     
     <node ns="$(arg namespace)/sensors" pkg="optical_swarm" type="p3d2nav.py" name="p3d2nav">
      <!-- The lat/lon location of the gazebo origin -->  
      <param name="gazebo_origin_lat" value="44.0952" type="double" />
      <param name="gazebo_origin_long" value="9.8234" type="double" />
      <remap from="p3d_odom" to="p3d"/>
      <remap from="nav_odom" to="p3d_nav/"/>
    </node>
     
     <node ns="$(arg namespace)" pkg="usv_control" type="usv_control_diff_drive.py"
  name="sandwich_0_usv_control_diff_drive" output="screen">
    <!-- Set initial control gains -->
    <!-- Surge -->
    <param name="velKp" value="1.1"/>
    <param name="velKi" value="0.0"/>
    <param name="velKd" value="0.0"/>
    <!-- Yaw Rate -->
    <param name="yawKp" value="2.5"/>
    <param name="yawKi" value="1.0"/>
    <param name="yawKd" value="0.0"/>

    <!-- Use remap to connect generic controller to specific use-case -->
    <remap from="nav_odom" to="sensors/p3d_nav"/>
    <remap from="left_thrust_cmd" to="thrusters/left_thrust_cmd"/>
    <remap from="right_thrust_cmd" to="thrusters/right_thrust_cmd"/>
    <remap from="vel_pid_debug" to="control/vel_pid_debug"/>
    <remap from="yaw_pid_debug" to="control/yaw_pid_debug"/>
    </node>
     
     
  </group>



  <group ns="robot1">
    <include file="$(find sandwich_gazebo)/launch/sandwich_multi.launch">
      <arg name="x" value="-532"/>
      <arg name="y" value="172"/>
      <arg name="z" value="0"/>
      <arg name="P" value="0"/>
      <arg name="R" value="0"/>
      <arg name="Y" value="1"/>
      <arg name="robot_locked" value="false"/>
      <arg name="namespace" value="sandwich_1"/>
      <arg name="robot_name" value="sandwich_1"/>
    </include>
    <node pkg="robot_state_publisher" type="robot_state_publisher"
	  name="robot_state_publisher" >
	  <remap from="robot_description" to="/robot1/sandwich_1/robot_description" />
    </node>
    
  </group>
  
       <!-- Rabbit Visualization:Spawn a visual model to serve as marker -->
  <group ns="april_cube">     
  <param name="april_description" 
         command="$(find xacro)/xacro --inorder $(find optical_swarm)/urdf/april_cube_demo.xacro" />
     
        
  <node name="spawn_rabbit" pkg="gazebo_ros" type="spawn_model"
        args="-urdf -param april_description -x -500 -y 210 -z 1 -R 0 -P 0 -Y 0 -model april_cube"/>
              
              <!-- Convert PointStamped messages to model states -->
  <node name="pointstamped2modelstate" pkg="optical_swarm"
	type="pointstamped2modelstate.py" output="screen">
    <param name="model_name" value="april_cube"/>
    <param name="reference_frame" value="world"/>
  </node>
  
  <node pkg="optical_swarm" type="rabbit.py" name="april_cube">
    <param name="update_rate" type="double" value="10"/>
    <param name="velocity" type="double" value="2"/>
    <rosparam file="$(find optical_swarm)/config/rabbit_waypoints_sydney.yaml" />
    
  </node>  
  <node pkg="robot_state_publisher" type="robot_state_publisher"
	  name="robot_state_publisher" >
	  <remap from="robot_description" to="april_description" />
    </node>
  </group>
  
        
  <!-- Start RVIZ with config file -->
  <!--node type="rviz" name="rviz" pkg="rviz"
	args="-d $(find optical_swarm)/config/sandwich.rviz" /-->
              
</launch>


